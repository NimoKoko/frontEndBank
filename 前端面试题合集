//面试题合集
//2019-02-21
//zenghongke

目录
  |-- HTML5
	|-- 暂缺
  |-- css3
	|-- 暂缺
  |-- javascript
    |-- 暂缺
  |-- ES6
    |-- 暂缺
  |-- vue
    |-- 暂缺
  |-- react
    |-- 暂缺
  |-- angular
    |-- 暂缺
  |-- 数据结构与算法
    |-- 暂缺



一、HTML5
	Q1.HTML5新增特性有哪些？
	A1.
		主要是关于图像，位置，存储，多任务等功能的增加。
		绘画 canvas;
		用于媒介回放的 video 和 audio 元素;
		本地离线存储 localStorage ，sessionStorage;
		语意化更好的内容元素，比如 article、footer、header、nav、section;
		表单控件，calendar、date、time、email、url、search;
		新的技术webworker, websockt, Geolocation;

	Q2.localStorage、sessionStorage和cookies之间的区别是什么？
	A2.cookies只能存储4kb的内容，而且会随着请求来服务端和浏览器之间来回传递。
		 localStorage存储量大，会永久存在于浏览器中，除非认为删除。
		 sessionStorage是单页面缓存，页面关闭即自动清除。

	Q3.浏览器是怎么对HTML5的离线存储资源进行管理和加载的？
	A3.
		在线情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，
		那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，
		那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，
		如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。
		离线情况下，浏览器就直接使用离线存储的资源。

	Q4.你如何对网站的文件和资源进行优化？
	A4.
		1、图片优化。
		2、开启GZip压缩。
		3、移除不必要的插件
		4、使用CDN
		5、压缩CSS、JavaScript和HTML文件
		6、避免重定向
		7、避免错误请求
		8、使用AJAX缓存，让网站内容分批加载，局部更新。
	
	Q5.Doctype作用？标准模式与兼容模式各有什么区别？HTML5为什么只需要写<!DOCTYPE HTML>？
	A5.
	（1）<!DOCTYPE>声明位于HTML文档中的第一行，处于<html>标签之前，用于告知浏览器的解析器用什么文档标准解析这个文档。
		DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。
	（2）标准模式的排版和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示，模拟老式浏览器的行为以防止站点无法工作。
		HTML5不基于SGML，因此不需要对DTD进行引用，但是需要DOCTYPE来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；
		HTML4.01基于SGML，所以需要对DTD进行引用，才能让浏览器知道该文档所使用的文档类型。

二、css3
	Q1.如何理解CSS的盒子模型？
	A1. ie 盒子模型和标准 w3c 盒子模型。具有width，height，padding，margin，border等属性的容器，即为盒子模型。

	Q2.在IE和chrom中的盒子模型有什么区别？
	A2.ie的盒子模型width和height包含了padding和border的值，而chrom则不包含。

	Q3.CSS是怎样定义权重规则的？
	A3.!important、行内选择符、ID选择符、类选择符、元素选择符。
	
	Q4.CSS3有哪些新特性？
	A4.
		1. CSS3实现圆角（border-radius），阴影（box-shadow），边框图片border-image
		2. 对文字加特效（text-shadow、），强制文本换行（word-wrap），线性渐变（linear-gradient）
		3. 旋转,缩放,定位,倾斜：transform:rotate(90deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);
		4. 增加了更多的CSS选择器、多背景、rgba()；
		5. 在CSS3中唯一引入的伪元素是 ::selection ；
		6. 媒体查询(@media)，多栏布局（flex）


	Q5.请解释一下CSS3的flexbox（弹性盒布局模型）,以及适用场景？
	A5.
		FLEX布局的常用场景
		垂直居中，处于中心，以及左中右三块布局

	Q6.justify-content和align-items除了做水平和垂直居中，还可以干嘛？
	A6.

三、javascript
	Q1.js有哪些基本数据类型？
	A1.number,string,null,undefined,boolean，symbol

	Q2.什么是变量提升，什么是函数提升?
	A2.

	Q3.在页面加载时，script标签增加async、defer分别有什么作用？
	A3.
		如果script标签设置了该属性，则浏览器会异步的下载该文件并且不会影响到后续DOM的渲染；
		如果有多个设置了defer的script标签存在，则会按照顺序执行所有的script；
		defer脚本会在文档渲染完毕后，DOMContentLoaded事件调用前执行。
		
		async的设置，会使得script脚本异步的加载并在允许的情况下执行，async的执行，并不会按着script在页面中的顺序来执行，而是谁先加载完谁执行。

	Q4.call和apply的区别？
	A4.都是用来修改函数的执行上下文(this)，区别在于接收参数的方式不同；

	Q5.事件委托是什么？
	A5.事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件。

	Q6.new一个新的对象，底层会执行哪些操作？
	A6.
		1.新生成一个对象
		2.链接到原型
		3.绑定this
		4.返回新对象

	Q7.什么是闭包？有哪些优缺点？
	A7.闭包就是能够读取其他函数内部变量的函数。
	        作用：一个是可以读取函数内部的变量，另一个就是让这些变量的值始终保持在内存中，不会在f1调用后被自动清除。
	        优点：变量长期驻扎在内存中；避免全局变量的污染。
	        缺点：常驻内存 会增大内存的使用量 使用不当会造成内存泄露。

	Q8，在有序的数组中我要查询一个数字，有哪几种方法，哪种效率最高？
	A8.二分法
	
	Q9,什么是伪数组？（arguments）
	A9.
		1、拥有length属性，其它属性（索引）为非负整数(对象中的索引会被当做字符串来处理，这里你可以当做是个非负整数串来理解)
		2、不具有数组所具有的方法
		判断方法isarray

	Q10,谈一下你对虚拟DOM的理解
	A10.
		虚拟DOM就是将DOM树转换成一个JS对象树
		但是由于他是一级一级进行比较的，这样就会有一个致命的缺点：假设在根元素上又嵌套了一个元素，那么Diff算法在比较第一层的时候就认为改变了，
		就相当于重新创建了一个JS对象树，这样效率还是不高，
		此外，还有一个致命的缺点就是;如果同一级上有特别多个相同的元素，在增加或者排序的时候，就会在循环比较的时候浪费掉大量的性能
		于是，为了解决这两个缺点，虚拟DOM做了两个假设，并且这两个假设也实现了，所以已经解决了这两个缺点
		两个假设：
		1、两个相同的组件产生类似的DOM结构，不同的DOM节点产生不同的DOM节点
		2、对于同一个层次的一组节点，他们可以通过唯一的id进行区分
		对于第二种假设，就是解释了我们为什么要在vue的v-for里面必须加一个key 并且这个key要是唯一的

	Q11.举例说明什么时候深拷贝，什么是浅拷贝？
	A11. 深拷贝 JSON.parse(JSON.stringify(a))
			 浅拷贝 a = b

	Q12.动画的最小时间间隔应该是多少？为什么？
	A12. 1/60*1000，因为普通的显示器是60Hz的，也就是1秒刷新60次。

	Q13.什么是原型？原型链是什么，有哪些特点？
	A13.

	Q14.cooikes隔离是什么，为什么要使用cookies隔离？
	A14.因为cookies会在页面请求服务端的时候自动带上，所以并不是所有的请求都需要带上cookies，所以需要对cookies进行隔离，阻止其传到服务端。因为cookies只会在同域的情况下才会传递，所有只要请求跨域，就可以阻止cookies的提交。

	Q15.前端常用的安全措施有哪些？
	A15.xss防御和crfs的防御

	Q16.for(var i = 0; i < 5; i++){
				setTimeout(function(){
					console.log(newDate,i)
				},1000)
			}
			控制台输出的是什么，为什么？
	A16.当前日期和5 循环5遍 因为var是全局变量定义，而且setTimeout会制造任务队列，当for循环完成，才会执行setTimeout，所以输出的是当前日期和5，一共5便。如果需要正常输出0到4，一种方法是var变成let，一直是将setTimeout变成立即执行函数。

	Q17. === 有什么缺点？
	A17. 判断不出NAN？ 无法深度遍历比较复杂类型的数据？

	Q18. 判断数据类型有哪几种方法？
	A19. typeOf,instanceof,Object.prototype.toString();
	instanceof
	1、左操作数是一个对象，右操作数是标识对象的类，如果左侧的对象是右侧类的实例，则表达式返回true，否则返回false
　	2、如果左边的操作数不是对象，返回false
　	3、如果右边的操作数不是函数，抛出类型错误异常
　	4、在计算obj instanceof f 时， 会先计算f.prototype, 然后在原型链中查找obj，如果找到则obj是f或者是f父类的实例，则返回true
	Object.prototype.toString.call(data);
	获取对象的类型信息

	Q19.对于一个div，外链的css样式，我js原生要怎么取得他的宽度？
	A19.var sheet=document.styleSheets[0]　　　　//获取到外链的样式表
　　　　　　var rule=sheet.cssRules[0]  　　　　　　//获取到外链样式表中的第一个样式
　　　　　　console.log(rule.style.background)　　　　//red   这样就可以获得了外链样式表中指定的样式了

	Q20. 什么是DOM？什么是BOM？分别有哪些方法？
	A20. DOM是指的DOM树上的节点，BOM是指浏览器中的方法。

	Q21.面向对象编程
	a21.

	Q22.手写原型链，说明一下继承；说一下vue的缺点和优点；冒泡；http url的结构；
	A22.
		var animal = {
			name:"cat",
			sound:function(){
				console.log("喵~")
			}
		};
		var tiger = new animal;
		tiger.prototype.name = "tiger";
		tiger.prototype.sound = function(){
			console.log("吼~")
		}
		
		其余继承的方法有apply()和call();

	Q23.什么是事件捕获，什么是事件冒泡？在事件流当中，他们的触发顺序是怎样的？
	A23.

	Q24.js的运行顺序
	
四、ES6
	Q1.ES6有哪些新的东西？
	A1.Let，const，for…of;解构赋值;箭头函数;promise;模板;
	
	Default Parameters（默认参数） in ES6
	Template Literals （模板文本）in ES6
	Multi-line Strings （多行字符串）in ES6
	Destructuring Assignment （解构赋值）in ES6
	Enhanced Object Literals （增强的对象文本）in ES6
	Arrow Functions （箭头函数）in ES6
	Promises in ES6
	Block-Scoped Constructs Let and Const（块作用域构造Let and Const）
	Classes（类） in ES6
	Modules（模块） in ES6

	Q2.数组去重，es6是怎么做的？
	A2.set和Array.from。

	Q3.promise是什么？有哪些方法？
	A3.事件委托，用于处理各种回调，.all() .then()

	Q4.promise的底层原理是什么？
	A4.

	Q5.构造函数内能否使用箭头函数？
	A5.

五、vue
	Q1.vue是mvvm模式，解释一下什么是mvvm？
	A1.Model-View-ViewModel;
	描述：MVVM 的核心是 ViewModel 层，它就像是一个中转站（value converter），
	负责转换 Model 中的数据对象来让数据变得更容易管理和使用，该层向上与视图层进行双向数据绑定，
	向下与 Model 层通过接口请求进行数据交互，起呈上启下作用。

	Q2.vue的双向数据绑定是什么，底层是怎么实现的，用的方法是什么？
	A2.数据发生变化的时候，视图也就发生变化，当视图发生变化的时候，数据也会跟着同步变化。
	   vue数据双向绑定是通过数据劫持结合发布者-订阅者模式的方式来实现。
	   Object.defineProperty()。
		 底层是setter和getter

	Q3.vue的全局钩子有哪些，生命周期有哪些?
	A3.
		1. 全局的钩子函数:定义在全局路由对象中 
		2. 某个路由独享的钩子,可以在路由配置上直接定义beforeEnter钩子函数 
		3. 组件内的钩子函数: 定义在组件的route选项中

	Q4.vue的导航守卫是什么？
	A4.
		全局守卫。router.beforeEach
		当从一个路由跳转到另一个路由的时候触发此守卫，这个守卫也叫全局前置守卫，所以它是跳转前触发的。任何路由跳转都会触发。
		组件内守卫 beforeRouteEnter，beforeRouteUpdate，beforeRouteLeave

	Q5.vue的父子、子父、兄弟间怎么传值的？
	A5.父组件通过porps传递到子组件，子组件通过$emit发送事件到父组件;父组件还可以通过ref的方式拿子组件的值并共享；eventBus；

	Q6.Vue的路由实现：hash模式 和 history模式？
	A6.
		vue-router中的模式选项主要在router实例化的时候进行定义
		模式	优点	缺点
		hash	使用简单、无需后台支持	在url中以hash形式存在，不会传到后台
		history	地址明确，便于理解和后台处理	需要后台配合
		hash模式背后的原理是onhashchange事件,可以在window对象上监听这个事件

	Q7.Vue与Angular以及React的区别？
	A7.
		vue模板 vs reactJSX
		对象属性  vs 状态管理
			？  vs React Native能在手机上创建原生应用

	Q8.vuex是什么？怎么使用？
	A8.状态管理器，state、actions、mutations

	Q9.对vue组件的理解
	A9.

	Q10. vue的路由是怎么实现的？如果让你自己去写一个路由方法，你会怎么写？
	A10.

	Q11.vuex要怎么配置，需要写哪些东西？
	A11.

	Q12.vue的路由传参query和params有什么区别？
	A12.query的是在url后面直接显示参数，但是params在页面刷新一下后就失效。

	Q13.简要说明一下什么是differ算法？
	A13.

六、react
	Q1.react的生命周期有哪些？
	A1.
		初始化  
			1、getDefaultProps() 
			2、getInitialState()
			3、componentWillMount()
			4、render()
			5、componentDidMount()
		更新
			6、componentWillReceiveProps(nextProps)
			7、shouldComponentUpdate(nextProps, nextState)
			8、componentWillUpdata(nextProps, nextState)
			9、render()
			10、componentDidUpdate()
		卸载
			11、componentWillUnmount()

七、angular
	Q1.angular双向绑定的底层是怎么实现的？
	A1.脏检查 $diget

八、数据结构和算法
	Q1.有哪些数据结构？
	A1.
		维基百科：“数据结构是计算机中存储、组织数据的方式”
		线性结构有：表（顺序表、链表），栈，队列，双队列，数组，串。 
		非线性结构有：二维数组，多维数组，广义表，树(普通树，二叉树，线索二叉树)，图，堆。
		推荐：https://blog.csdn.net/qq_34616766/article/details/84978030

	Q2.哪些数据需要用链表来做？什么是链表？
	Q2.链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。
		数组应用场景：数据比较少；经常做的运算是按序号访问数据元素；数组更容易实现，任何高级语言都支持；构建的线性表较稳定。
　　		链表应用场景：对线性表的长度或者规模难以估计；频繁做插入删除操作；构建动态性比较强的线性表。

九、其他
	Q1.当你在浏览器输入url后，服务器接受到你的请求，并返回展示页面，这中间页面是怎么渲染的？
	A1.
		1.解析HTML文件，创建DOM树。自上而下，遇到任何样式（link、style）与脚本（script）都会阻塞（外部样式不阻塞后续外部脚本的加载）。
		2.解析CSS。优先级：浏览器默认设置<用户设置<外部样式<内联样式<HTML中的style样式；
		3.将CSS与DOM合并，构建渲染树（Render Tree）
		4.布局和绘制，重绘（repaint）和重排（reflow）
	
	Q2.在页面需要制作一个圆形的可点击区域，需要怎么做？
	A2.
		 1.图片切图
		 2.boder-radius 为50%

	Q3.webpack的热更新是什么原理？热加载？
	A3.

	Q4.webpack打包执行了哪些操作?要配置哪些东西?怎么分组打包?
	A4.

	Q5.前端的seo优化有哪些？
	A5.

	Q6.nginx怎么配置？
	A6.

	Q7.什么是埋点？具体方法是怎么写的？
	A7.